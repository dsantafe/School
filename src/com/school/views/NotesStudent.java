/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.school.views;

import com.school.models.Student;
import com.school.models.Course;
import com.school.models.Note;
import com.school.services.StudentService;
import com.school.services.EnrollmentService;
import com.school.services.CourseService;
import com.school.services.NoteService;
import java.awt.HeadlessException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author EliteBook
 */
public class NotesStudent extends javax.swing.JFrame {    
    
    /**
     * Creates new form Enrollments
     */
    public NotesStudent() {
        initComponents();
        tbDataNotes.setModel(new DefaultTableModel());
        tbDataEnrollments.setModel(new DefaultTableModel());
        lblStudentId.setVisible(false);
        lblEnrollmentId.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblStudentCode = new javax.swing.JLabel();
        txtStudentId = new javax.swing.JTextField();
        lblStudentFullName = new javax.swing.JLabel();
        lblStudentFullNameInfo = new javax.swing.JLabel();
        lblStudentEnrollmentDate = new javax.swing.JLabel();
        lblStudentEnrollmentDateInfo = new javax.swing.JLabel();
        btnStudentSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbDataEnrollments = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbDataNotes = new javax.swing.JTable();
        lblTitle1 = new javax.swing.JLabel();
        lblTitle3 = new javax.swing.JLabel();
        lblCourseTitleAdd = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        lblStudentId = new javax.swing.JLabel();
        lblEnrollmentId = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitle.setText("Notas");
        lblTitle.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        lblStudentCode.setText("CÃ³digo:");

        lblStudentFullName.setText("Nombre completo:");

        lblStudentFullNameInfo.setText("-");

        lblStudentEnrollmentDate.setText("Fecha registro:");

        lblStudentEnrollmentDateInfo.setText("-");

        btnStudentSearch.setText("Consultar");
        btnStudentSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStudentSearchActionPerformed(evt);
            }
        });

        tbDataEnrollments.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbDataEnrollments.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbDataEnrollmentsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbDataEnrollments);

        tbDataNotes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tbDataNotes);

        lblTitle1.setText("Cursos matriculados");

        lblTitle3.setText("Curso seleccionado:");

        lblCourseTitleAdd.setText("-");

        btnBack.setText("Volver");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblStudentId.setText(".");

        lblEnrollmentId.setText(".");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitle1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(lblTitle, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(lblStudentCode)
                                .addGap(18, 18, 18)
                                .addComponent(txtStudentId, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnStudentSearch)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnBack))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblStudentFullName)
                                    .addComponent(lblStudentEnrollmentDate))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblStudentFullNameInfo, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                                    .addComponent(lblStudentEnrollmentDateInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(lblTitle3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblCourseTitleAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblStudentId)
                            .addComponent(lblEnrollmentId))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStudentCode)
                    .addComponent(txtStudentId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnStudentSearch)
                    .addComponent(btnBack)
                    .addComponent(lblStudentId))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStudentFullName)
                    .addComponent(lblStudentFullNameInfo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStudentEnrollmentDate)
                    .addComponent(lblStudentEnrollmentDateInfo))
                .addGap(18, 18, 18)
                .addComponent(lblTitle1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEnrollmentId))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTitle3)
                    .addComponent(lblCourseTitleAdd))
                .addGap(11, 11, 11)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnStudentSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStudentSearchActionPerformed

        try {

            Student student = new Student();
            StudentService studentService = new StudentService();
            
            if (txtStudentId.getText().isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "Debe ingresar el cÃ³digo del estudiante.");
                return;
            }

            int code = Integer.parseInt(txtStudentId.getText());

            student = studentService.GetById(code);

            if (student.getId() == 0) {
                JOptionPane.showMessageDialog(rootPane, "No se encontraron registros.");
                tbDataEnrollments.setModel(new DefaultTableModel());
                tbDataNotes.setModel(new DefaultTableModel());
            } else {

                lblStudentId.setText(String.valueOf(student.getId()));
                lblStudentId.setVisible(false);
                
                lblStudentEnrollmentDateInfo.setText(String.valueOf(student.getEnrollmentDate()));
                
                String fullName = student.getLastName() + " " + student.getFirstMidName();
                lblStudentFullNameInfo.setText(fullName);

                List<Course> coursesEnrollment = new ArrayList<>();
                EnrollmentService enrollmentService = new EnrollmentService();

                coursesEnrollment = enrollmentService.GetCoursesByStudent(code);

                String[] columnsEnrollments = {"Id", "Titulo", "Creditos", "Matricula"};
                DefaultTableModel modelEnrollments = new DefaultTableModel(null, columnsEnrollments);

                String[] rowsEnrollments = new String[4];
                List<Integer> coursesId = new ArrayList<>();

                for (Course item : coursesEnrollment) {

                    rowsEnrollments[0] = String.valueOf(item.getCourseId());
                    rowsEnrollments[1] = item.getTitle();
                    rowsEnrollments[2] = String.valueOf(item.getCredits());
                    rowsEnrollments[3] = String.valueOf(item.getEnrollmentId());

                    modelEnrollments.addRow(rowsEnrollments);
                    coursesId.add(item.getCourseId());
                }

                if (coursesEnrollment.isEmpty()) {
                    tbDataEnrollments.setModel(new DefaultTableModel());
                } else {
                    tbDataEnrollments.setModel(modelEnrollments);
                }                
            }

        } catch (NumberFormatException | SQLException | ClassNotFoundException | HeadlessException ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        }

    }//GEN-LAST:event_btnStudentSearchActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        MenuStudent menuStudent = new MenuStudent();
        menuStudent.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void tbDataEnrollmentsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbDataEnrollmentsMouseClicked

        try {            

            if (evt.getButton() == 1) {
                int row = tbDataEnrollments.getSelectedRow();

                Course course = new Course();
                CourseService courseService = new CourseService();

                course = courseService.GetById(Integer.valueOf(tbDataEnrollments.getValueAt(row, 0).toString()));

                lblEnrollmentId.setText(tbDataEnrollments.getValueAt(row, 3).toString());
                lblCourseTitleAdd.setText(course.getTitle());
                
                LoadNotesByStudent();
            }
        } catch (NumberFormatException | SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        }
    }//GEN-LAST:event_tbDataEnrollmentsMouseClicked

    private void LoadNotesByStudent() {
        try {

            List<Note> notes = new ArrayList<>();
            NoteService noteService = new NoteService();
            int enrollmentId = Integer.valueOf(lblEnrollmentId.getText());

            notes = noteService.GetNotes(enrollmentId);

            if (notes.isEmpty()) {
                tbDataNotes.setModel(new DefaultTableModel());
                throw new Exception("No se encontraron notas registradas.");
            } else {
                String[] columns = {"Nota"};
                DefaultTableModel model = new DefaultTableModel(null, columns);

                String[] rows = new String[1];

                for (Note item : notes) {
                    rows[0] = String.valueOf(item.getFinal());                   

                    model.addRow(rows);
                }

                tbDataNotes.setModel(model);
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NotesStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NotesStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NotesStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NotesStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NotesStudent().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnStudentSearch;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCourseTitleAdd;
    private javax.swing.JLabel lblEnrollmentId;
    private javax.swing.JLabel lblStudentCode;
    private javax.swing.JLabel lblStudentEnrollmentDate;
    private javax.swing.JLabel lblStudentEnrollmentDateInfo;
    private javax.swing.JLabel lblStudentFullName;
    private javax.swing.JLabel lblStudentFullNameInfo;
    private javax.swing.JLabel lblStudentId;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTitle1;
    private javax.swing.JLabel lblTitle3;
    private javax.swing.JTable tbDataEnrollments;
    private javax.swing.JTable tbDataNotes;
    private javax.swing.JTextField txtStudentId;
    // End of variables declaration//GEN-END:variables
}
